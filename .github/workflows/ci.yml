name: Frontend CI (Web)

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_REF: ghcr.io/chatfleetoss/chatfleet-web

jobs:
  build-test-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_REF }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NEXT_PUBLIC_API_BASE=/api
      - name: Install Trivy
        uses: aquasecurity/setup-trivy@v0.2.2
      - name: Trivy scan
        run: trivy image --exit-code 1 --severity HIGH,CRITICAL --no-progress $(docker images --format '{{.Repository}}:{{.Tag}}' | head -n1)
      - name: Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "detect --no-banner --exit-code 1"
      - name: SBOM
        uses: anchore/sbom-action@v0
        with:
          image: $(docker images --format '{{.Repository}}:{{.Tag}}' | head -n1)
          artifact-name: sbom-web-spdx.json

  push-sign:
    needs: build-test-scan
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_REF }}
          tags: |
            type=ref,event=tag
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ghcr.io/chatfleetoss/chatfleet-web:latest
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NEXT_PUBLIC_API_BASE=/api
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3
      - name: Cosign sign (keyless)
        run: cosign sign --yes ${{ env.IMAGE_REF }}:${{ github.ref_name }}
